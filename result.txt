 getviewcrdata() {
   debugger
   const apiUrls = 'https://localhost:7236/api/ViewChange/GetAllchanges'
   const requestBody = {
   }
   const httpOptions = {
     headers: new HttpHeaders({
       'content-Type': 'application/json'
     })
   };
   this.http.get(apiUrls).subscribe(
     (response: any) => {
       console.log(response);
       this.viewchangerequest = response;
       console.log(this.viewchangerequest)
     },
     (error) => {
       console.error("Post failed", error)
     }
   )
 }


getviewcrdata() {
  debugger
  const apiUrls = 'https://localhost:7236/api/ViewChange/GetAllchanges';
  const requestBody = {}; // You can include request body if needed
  const httpOptions = {
    headers: new HttpHeaders({
      'content-Type': 'application/json'
    })
  };
  
  this.http.get(apiUrls).subscribe(
    (response: any) => {
      console.log(response);
      // Parse and sort the response before assigning it to viewchangerequest
      this.viewchangerequest = this.parseAndSortResponse(response);
      console.log(this.viewchangerequest);
    },
    (error) => {
      console.error("Get failed", error);
    }
  );
}

parseAndSortResponse(response: any): any[] {
  // Parse the response if needed
  // For example, if response is an array of objects and you want to sort it by a specific property
  let parsedResponse = response.map((item: any) => {
    // Perform parsing logic here if needed
    return item;
  });

  // Sort the parsed response array
  parsedResponse.sort((a: any, b: any) => {
    // Sort logic here
    // For example, sorting by a property called 'propertyName'
    if (a.propertyName < b.propertyName) {
      return -1;
    }
    if (a.propertyName > b.propertyName) {
      return 1;
    }
    return 0;
  });

  return parsedResponse;
}
