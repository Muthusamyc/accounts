public async Task<IActionResult> UploadFiles([FromForm] string itcrid, [FromForm] List<IFormFile> files)
{
    try
    {
        if (files == null || files.Count == 0)
        {
            return BadRequest("No files selected for upload.");
        }

        if (string.IsNullOrEmpty(itcrid))
        {
            return BadRequest("ITCRID is required.");
        }

        var uploadsFolder = Path.Combine(Directory.GetCurrentDirectory(), "ChangeRequest", itcrid);
        if (!Directory.Exists(uploadsFolder))
        {
            Directory.CreateDirectory(uploadsFolder);
        }

        var fileRecords = new List<FileRecord>();
        foreach (var file in files)
        {
            if (file.Length > 0)
            {
                var fileName = file.FileName; // Use the original file name provided by the user
                var filePath = Path.Combine(uploadsFolder, fileName);

                using (var stream = new FileStream(filePath, FileMode.Create))
                {
                    await file.CopyToAsync(stream);
                }

                // Create a file record object
                var fileRecord = new FileRecord
                {
                    ItcrId = itcrid,
                    FileName = fileName,
                    FilePath = filePath,
                    UploadedAt = DateTime.UtcNow
                };

                fileRecords.Add(fileRecord);
            }
        }

        // Save file records to the database
        using (var dbContext = new ApplicationDbContext(/* options */))
        {
            await dbContext.FileRecords.AddRangeAsync(fileRecords);
            await dbContext.SaveChangesAsync();
        }

        return Ok(new { message = $"{files.Count} files uploaded and recorded successfully." });
    }
    catch (Exception ex)
    {
        return StatusCode(StatusCodes.Status500InternalServerError, $"Internal server error: {ex.Message}");
    }
}
