  getlessondat() {
    const apiUrls = this.apiurl + '/CRlession/GetCrLession'
    const requestBody = {

    }
    const httpOptions = {
      headers: new HttpHeaders({
        'content-Type': 'application/json'
      })
    };
    this.http.get(apiUrls, requestBody).subscribe(
      (response: any) => {
        this.lessonval = response.filter((item: any) => item.itcrid === Number(this.crid.itcrid))
        console.log('cr release info', this.lessonval)

        this.lessonvalviewdt = this.lessonval[0].lessonDt
        this.lessonvalviewComments = this.lessonval[0].lessons
        this.lessonvalviewattachment = this.lessonval[0].attachment
        const apimnfdate = this.datepipe.transform(this.lessonvalviewdt, 'dd-MMM-yyyy') || '';
        const [day, month, year] = apimnfdate.split('-');
        const dateObject = new Date(`${year}-${month}-${day}`);
        const formatDate = dateObject.toISOString().split('T')[0];
        this.lessonDt = formatDate

        this.lessonval.forEach((item) => {
          this.lessonsArray.push({ text: `${item.lessons}` });
        });
        console.log('this.lessonsArray', this.lessonsArray)
        this.attachment = this.lessonvalviewattachment
      },
      (error) => {
        console.error("Post failed", error)
      }
    )
  }
