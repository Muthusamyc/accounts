import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-approver',
  templateUrl: './approver.component.html',
  styleUrls: ['./approver.component.css']
})
export class ApproverComponent implements OnInit {
  data: any; // Your data goes here
  approvers: any[] = [];
  approverCount: number = 0;

  constructor() {}

  ngOnInit(): void {
    this.initializeApprovers();
  }

  initializeApprovers() {
    // Initialize approvers based on the data
    this.approverCount = parseInt(this.approver[0].approverCount);
    for (let i = 0; i < this.approverCount; i++) {
      this.approvers.push({
        name: '',
        date: '',
        remark: '',
        comment: '',
        attach: ''
      });
    }
  }

  getData(index: number) {
    // Implement logic to handle approval data for the corresponding index
    console.log('Approve data for index', index);
  }

  rejectButton(index: number) {
    // Implement logic to handle rejection for the corresponding index
    console.log('Reject data for index', index);
  }
}


<nav class="breadcrumbs">
  <div class="" id="nav-tab" role="tablist">
    <a class="active breadcrumbs__item is-active" id="nav-home-tab{{i}}" *ngFor="let approver of counter(approverCount); let i = index" data-bs-toggle="tab" [attr.data-bs-target]="'#nav-home' + i" role="tab" aria-controls="nav-home" aria-selected="true">Approver {{i+1}}</a>
  </div>
</nav>
<div class="tab-content" id="nav-tabContent">
  <ng-container *ngFor="let approver of counter(approverCount); let i = index">
    <div class="tab-pane fade" id="nav-home{{i}}" role="tabpanel" aria-labelledby="nav-home-tab{{i}}">
      <!-- Content specific to each tab -->
      <div class="container-field-approve">
        RFC initiate Approved
        <!-- Your content here -->
        <!-- You can access specific approver data using approvers[i] -->
      </div>
      <div>
        <!-- Your other content here -->
        <button (click)="getData(i)">Approve</button>
        <button (click)="rejectButton(i)">Reject</button>
      </div>
    </div>
  </ng-container>
</div>
